service: myserver
useDotenv: true
 
frameworkVersion: '2'
 
plugins:
  - serverless-esbuild
  - serverless-offline
  #- serverless-s3-sync
 
provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  region: eu-north-1
  httpApi:
    cors: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:eu-north-1:*:table/${env:TABLENAME}"

 
custom:
  esbuild:
    target: es2019
    tsconfig: ./tsconfig.json
    minify: false
    sourcemap: inline
 
  httpApi:
    payload: '1.0'

  s3Sync:
    - bucketName: testbucketforbachelor2021
      localDir: ../clients/client/dist
      deleteRemoved: true
      acl: public-read
      followSymlinks: true
      defaultContentType: text/html
      params:
        - index.html:
            CacheControl: 'no-cache'
        - "*.js":
            CacheControl: 'public, max-age=31536000'

functions:
  userprofile:
    handler: src/userprofile.mainHandler
    events:
      - http:
          path: /userprofile
          method: any
  userSubscription:
    handler: src/userSubscription.mainHandler
    events:
      - http:
          path: /u/subscription
          method: any
  vendorSubscription:
    handler: src/vendorSubscription.mainHandler
    events:
      - http:
          path: /v/subscription
          method: any
  vendorSubscriptions:
    handler: src/vendorSubscriptions.mainHandler
    events: 
      - http:
          path: /v/subscriptions
          method: get
  userSubscriptions:
    handler: src/userSubscriptions.mainHandler
    events: 
      - http:
          path: /u/subscriptions
          method: get

resources:
  Resources:
    WebSiteBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: testbucketforbachelor2021
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: error.html
    MainDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
          - AttributeName: GSI1_pk
            AttributeType: S
          - AttributeName: GSI1_sk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        TableName: ${env:TABLENAME}
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes: 
          - IndexName: GSI1
            KeySchema:
              - AttributeName: GSI1_pk
                KeyType: HASH
              - AttributeName: GSI1_sk
                KeyType: RANGE
            Projection:
              ProjectionType: "ALL"